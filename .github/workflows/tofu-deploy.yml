name: Keycloak Cluster Deployment onto Self Hosted K3d Cluster

on:
  workflow_dispatch:
  push:
    branches:
      - feature/**
      - bug/**
    paths:
      - certificates/**
      - namespace/**
      - secrets/**
      - cluster/**
      - .github/workflows/tofu-deploy.yml
  pull_request:
    paths:
      - certificates/**
      - namespace/**
      - secrets/**
      - cluster/**
      - .github/workflows/tofu-deploy.yml
    branches:
      - main
    types:
      - opened
      - synchronize
      - closed

jobs:
  namespace_deploy:
    name: Keycloak Namespace Deployment onto Self Hosted K3d Cluster
    uses: necronizers-cloud/automations/.github/workflows/tofu-deploy.yml@main
    with:
      deployment_name: Keycloak Namespace
      folder_path: namespace
      runners: cloud
      post_apply_script: |

        # Deploy Keyclaok Operator in the keycloak namespace
        echo "Deploying Keycloak Operator in the keycloak namespace..."

        kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/25.0.4/kubernetes/keycloaks.k8s.keycloak.org-v1.yml
        kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/25.0.4/kubernetes/keycloakrealmimports.k8s.keycloak.org-v1.yml
        kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/25.0.4/kubernetes/kubernetes.yml -n keycloak

        # Sleep till operator is ready
        echo "Sleeping till the operator is ready"
        sleep 60
    secrets: inherit
      
  certificates_deploy:
    needs: [namespace_deploy]
    name: Keycloak Certificates Deployment onto Self Hosted K3d Cluster
    uses: necronizers-cloud/automations/.github/workflows/tofu-deploy.yml@main
    with:
      deployment_name: Keycloak Certificates
      folder_path: certificates
      runners: cloud
      post_apply_script: |

        # Wait for Keycloak Ingress Certificate to be ready
        echo "Waiting for Keycloak Ingress Certificate to be ready"
        kubectl wait --for=condition=Ready=true certificate/keycloak-ingress-certificate -n keycloak --timeout=300s
    secrets: inherit
      
  secrets_deploy:
    needs: [certificates_deploy]
    name: Keycloak Secrets Deployment onto Self Hosted K3d Cluster
    uses: necronizers-cloud/automations/.github/workflows/tofu-deploy.yml@main
    with:
      deployment_name: Keycloak Secrets
      folder_path: secrets
      runners: cloud
      pre_plan_script: |
        kubectl get secret -n postgres keycloak-pg-cert -o json | jq -rc '.data."tls.key"' | base64 -d > tls.key
        openssl pkcs8 -topk8 -inform PEM -outform DER -in tls.key -out tls.pk8 -nocrypt
    secrets: inherit
      
  cluster_deploy:
    needs: [secrets_deploy]
    name: Keycloak Cluster Deployment onto Self Hosted K3d Cluster
    uses: necronizers-cloud/automations/.github/workflows/tofu-deploy.yml@main
    with:
      deployment_name: Keycloak Cluster
      folder_path: cluster
      runners: cloud
    secrets: inherit
      

